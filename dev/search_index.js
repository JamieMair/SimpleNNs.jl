var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SimpleNNs","category":"page"},{"location":"#SimpleNNs","page":"Home","title":"SimpleNNs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SimpleNNs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleNNs]","category":"page"},{"location":"#SimpleNNs.activation_gradient_fn-Union{Tuple{Dense{DT, K, T}}, Tuple{T}, Tuple{K}, Tuple{DT}} where {DT, K, T}","page":"Home","title":"SimpleNNs.activation_gradient_fn","text":"Dertivatives are used to backpropagate the gradients of the layer outputs back to the activations of that layer. To save space, these are calculated exclusively using the outputs of the layer. Instead of functions written as dy/dx=f(x), we  instead write dy/dx = g(y). This can be done for the 3 major functions.\n\nWhenever y is used below, assume this is a function of the output, not the input.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleNNs.backprop!-NTuple{5, Any}","page":"Home","title":"SimpleNNs.backprop!","text":"backprop!(partials_buffer, gradient_buffer, inputs, outputs, layer)\n\nBackpropagates the partial gradients of the outputs of the current layer into the parameters of the current layer. partial_buffers is used as a buffer for the gradients of the output of this layer. gradient_buffer should be  filled up with the gradients of the parameters of the current layer, using the chain rule. inputs is the array fed into the layer and outputs is the output of this layer in the forward pass. layer is the struct containing information about the layer.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleNNs.pullback!-Tuple{Any, Any, SimpleNNs.AbstractLayer}","page":"Home","title":"SimpleNNs.pullback!","text":"pullback!(input_partials, output_partials, layer)\n\nHere, we complete the backpropagation of the partial gradients to the inputs of the current layer. This should be called after backprop!. This method will fill the input_partials buffer with partial gradients calculated via the chain rule from the gradients of the partials from this layer's output.\n\n\n\n\n\n","category":"method"}]
}
